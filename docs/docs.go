// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "webbleen",
            "url": "https://webbleen.com",
            "email": "contact@webbleen.com"
        },
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/dashboard": {
            "get": {
                "description": "显示访问记录管理界面",
                "consumes": [
                    "text/html"
                ],
                "produces": [
                    "text/html"
                ],
                "tags": [
                    "Dashboard"
                ],
                "summary": "显示 Dashboard 页面",
                "responses": {
                    "200": {
                        "description": "HTML页面",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/stats/behavior": {
            "get": {
                "description": "获取设备、浏览器、操作系统、地理位置等用户行为统计",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "统计"
                ],
                "summary": "获取用户行为分析",
                "responses": {
                    "200": {
                        "description": "成功",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/stats/overview": {
            "get": {
                "description": "获取今日访问量、累计访问量、独立访客等统计信息",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Dashboard"
                ],
                "summary": "获取访问统计概览",
                "responses": {
                    "200": {
                        "description": "成功",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/stats/records": {
            "get": {
                "description": "分页获取访问记录，支持按语言过滤",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Dashboard"
                ],
                "summary": "获取访问记录列表",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "页码",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 20,
                        "description": "每页数量",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "语言过滤",
                        "name": "language",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "成功",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/stats/visit": {
            "post": {
                "description": "记录用户访问信息，包括页面路径、设备信息、地理位置等",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "统计"
                ],
                "summary": "记录访问",
                "parameters": [
                    {
                        "description": "访问记录",
                        "name": "visitRecord",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/database.VisitRecord"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "成功",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/stats/visits": {
            "get": {
                "description": "获取今日访问量、累计访问量、独立访客等统计信息，支持按语言过滤",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "统计"
                ],
                "summary": "获取访问统计概览",
                "parameters": [
                    {
                        "type": "string",
                        "default": "\"\"",
                        "description": "语言代码",
                        "name": "language",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "成功",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "database.VisitRecord": {
            "type": "object",
            "properties": {
                "browser": {
                    "type": "string"
                },
                "city": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                },
                "created_on": {
                    "type": "string"
                },
                "device": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "ip": {
                    "type": "string"
                },
                "language": {
                    "type": "string"
                },
                "modified_on": {
                    "type": "string"
                },
                "os": {
                    "type": "string"
                },
                "page": {
                    "type": "string"
                },
                "referer": {
                    "type": "string"
                },
                "session_id": {
                    "type": "string"
                },
                "user_agent": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "api.webbleen.com",
	BasePath:         "/",
	Schemes:          []string{"https"},
	Title:            "webbleen 博客 API 服务",
	Description:      "webbleen 博客 API 服务，提供统计、内容管理等功能",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
